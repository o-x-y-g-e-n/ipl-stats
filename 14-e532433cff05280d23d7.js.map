{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/inherits.js","webpack:///./node_modules/@material-ui/core/esm/Table/TableContext.js","webpack:///./node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","webpack:///./node_modules/@material-ui/core/esm/TableCell/TableCell.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","webpack:///./node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","webpack:///./node_modules/dom-helpers/esm/canUseDOM.js","webpack:///./node_modules/dom-helpers/esm/scrollbarSize.js","webpack:///./node_modules/react-virtualized/dist/es/utils/animationFrame.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/Grid.js","webpack:///./node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","webpack:///./node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","webpack:///./node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","webpack:///./node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","webpack:///./node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","webpack:///./node_modules/react-virtualized/dist/es/Collection/CollectionView.js","webpack:///./node_modules/react-virtualized/dist/es/Collection/Section.js","webpack:///./node_modules/react-virtualized/dist/es/Collection/SectionManager.js","webpack:///./node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","webpack:///./node_modules/react-virtualized/dist/es/Collection/Collection.js","webpack:///./node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","webpack:///./node_modules/react-virtualized/dist/es/Collection/index.js","webpack:///./node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","webpack:///./node_modules/react-virtualized/dist/es/ColumnSizer/index.js","webpack:///./node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","webpack:///./node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","webpack:///./node_modules/react-virtualized/dist/es/List/List.js","webpack:///./node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","webpack:///./node_modules/react-virtualized/dist/es/vendor/intervalTree.js","webpack:///./node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","webpack:///./node_modules/react-virtualized/dist/es/Masonry/Masonry.js","webpack:///./node_modules/react-virtualized/dist/es/Masonry/index.js","webpack:///./node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","webpack:///./node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","webpack:///./node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","webpack:///./node_modules/react-virtualized/dist/es/Table/SortDirection.js","webpack:///./node_modules/react-virtualized/dist/es/Table/SortIndicator.js","webpack:///./node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","webpack:///./node_modules/react-virtualized/dist/es/Table/Column.js","webpack:///./node_modules/react-virtualized/dist/es/Table/Table.js","webpack:///./node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","webpack:///./node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","webpack:///./node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","webpack:///./node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","webpack:///./node_modules/react-virtualized/dist/es/Table/index.js","webpack:///./node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","webpack:///./node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","webpack:///./node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js","webpack:///./node_modules/react-virtualized/dist/es/WindowScroller/index.js","webpack:///./src/components/TeamTable.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutProperties.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableRest.js"],"names":["setPrototypeOf","module","exports","subClass","superClass","TypeError","prototype","Object","create","constructor","value","writable","configurable","props","ref","role","Component","_props$align","align","classes","className","component","paddingProp","padding","scopeProp","scope","sizeProp","size","sortDirection","variantProp","variant","other","table","tablelvl2","isHeadCell","ariaSort","root","concat","capitalize","stickyHeader","withStyles","theme","typography","body2","display","verticalAlign","borderBottom","palette","type","divider","textAlign","head","color","text","primary","lineHeight","pxToRem","fontWeight","fontWeightMedium","body","footer","secondary","fontSize","sizeSmall","paddingRight","width","paddingLeft","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","flexDirection","alignJustify","position","top","left","zIndex","backgroundColor","background","default","name","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","this","_cellSizeGetter","_cellCount","_estimatedCellSize","key","_ref2","_lastMeasuredIndex","index","Error","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","i","undefined","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","window","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","arguments","length","cachedIndices","callback","indices","keys","allInitialized","every","Array","isArray","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","recalc","canUseDOM","scrollDiv","document","createElement","style","height","overflow","appendChild","offsetWidth","clientWidth","removeChild","_class","_temp","request","self","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","raf","caf","frame","delay","Promise","resolve","then","Date","now","timeout","call","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","SCROLL_POSITION_CHANGE_REASONS","_React$PureComponent","Grid","_this","_disablePointerEventsTimeoutId","setState","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","state","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSize","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollLeft","scrollTop","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","prevState","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","prevProps","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","containerProps","containerRole","containerStyle","noContentRenderer","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","_setScrollingContainerRef","onScroll","_onScroll","maxWidth","maxHeight","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","scrollHeight","scrollWidth","hasOwnProperty","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","nextProps","assign","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","cellRendererParams","renderedCell","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","children","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","_React$Component","AutoSizer","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","offsetHeight","_window","getComputedStyle","parseInt","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","nonce","parentNode","ownerDocument","defaultView","HTMLElement","_detectElementResize","addResizeListener","_onResize","removeResizeListener","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","element","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","bind","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","propTypes","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","indexOf","splice","reportLeftRange","arr","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","result","insert","weight","remove","n","queryPoint","queryInterval","tproto","get","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","keyMapper","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","ASC","DESC","SortIndicator","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","Column","cellDataGetter","rowData","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","columns","_getHeaderColumns","onColumnClick","_column$props","columnData","onClick","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","onRowClick","onRowDoubleClick","onRowRightClick","onRowMouseOver","onRowMouseOut","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","minWidth","_this4","_createHeader","getScrollbarWidth","a11yProps","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","instance","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","addEventListener","unregisterScrollListener","removeEventListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll","MuiVirtualizedTable","getRowClassName","clsx","tableRow","flexContainer","tableRowHover","tableCell","noClick","numeric","render","tableProps","headerProps","React","PureComponent","defaultProps","VirtualizedTable","alignItems","flip","cursor","grey","TeamTable","row","obj","Paper","iter","Symbol","iterator","from","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","_getPrototypeOf","o","getPrototypeOf","__proto__","objectWithoutPropertiesLoose","excluded","sourceSymbolKeys","propertyIsEnumerable","arrayWithoutHoles","iterableToArray","nonIterableSpread","_setPrototypeOf","_defineProperties","descriptor","Constructor","protoProps","staticProps","len","arr2","minLen","test","_typeof","assertThisInitialized","createDetectElementResize","hostWindow","attachEvent","global","requestFrame","fn","cancelFrame","resetTriggers","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollListener","e","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","animationName","toLowerCase","animationKeyframes","animationStyle","doc","elementStyle","getElementById","css","getElementsByTagName","setAttribute","styleSheet","cssText","createTextNode","createStyles","innerHTML","__animationListener__","detachEvent","_arr","_n","_d","_e","_s","_i","next","done","err"],"mappings":"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","file":"14-e532433cff05280d23d7.js","sourcesContent":["var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { darken, fade, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: 16\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */\n    stickyHeader: {\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nvar TableCell = /*#__PURE__*/React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  var role;\n  var Component;\n\n  if (component) {\n    Component = component;\n    role = isHeadCell ? 'columnheader' : 'cell';\n  } else {\n    Component = isHeadCell ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'default');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var variant = variantProp || tablelvl2 && tablelvl2.variant;\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'default' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))], variant === 'head' && table && table.stickyHeader && classes.stickyHeader),\n    \"aria-sort\": ariaSort,\n    role: role,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex; // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\n\nvar CellSizeAndPositionManager = /*#__PURE__*/function () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\n\nvar ScalingCellSizeAndPositionManager = /*#__PURE__*/function () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0); // Favor composition over inheritance to simplify IE10 support\n\n\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\n\n\nvar Grid = (_temp = _class = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent); // Invokes onSectionRendered callback only when start/stop row or column indices change\n\n\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop; // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state; // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex; // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class = /*#__PURE__*/function (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\n\nvar CellMeasurer = (_temp = _class = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent); // Invokes callbacks only when their values have changed.\n\n\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\n\nvar Section = /*#__PURE__*/function () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\n\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\n\nvar SectionManager = /*#__PURE__*/function () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\n\nvar Collection = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import Collection from './Collection';\nexport default Collection;\nexport { Collection };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree'; // Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\n\nvar PositionCache = /*#__PURE__*/function () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n/**\n * Caches measurements for a given cell.\n */\n\nvar CellMeasurerCacheDecorator = /*#__PURE__*/function () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n/**\n * Default table header renderer.\n */\n\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column = /*#__PURE__*/function (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n/**\n * Default row renderer for Table.\n */\n\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";","import WindowScroller, { IS_SCROLLING_TIMEOUT } from './WindowScroller';\nexport default WindowScroller;\nexport { WindowScroller, IS_SCROLLING_TIMEOUT };","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport clsx from 'clsx'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { AutoSizer, Column, Table } from 'react-virtualized'\r\nimport LazyLoad from 'react-lazyload'\r\nconst MIN_TABLE_WIDTH = 1500\r\nconst styles = (theme) => ({\r\n  flexContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    boxSizing: 'border-box',\r\n  },\r\n  table: {\r\n    // temporary right-to-left patch, waiting for\r\n    // https://github.com/bvaughn/react-virtualized/issues/454\r\n    '& .ReactVirtualized__Table__headerRow': {\r\n      flip: false,\r\n      paddingRight: theme.direction === 'rtl' ? '0 !important' : undefined,\r\n    },\r\n  },\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n  },\r\n  tableRowHover: {\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.grey[200],\r\n    },\r\n  },\r\n  tableCell: {\r\n    flex: 1,\r\n  },\r\n  noClick: {\r\n    cursor: 'initial',\r\n  },\r\n})\r\n\r\nclass MuiVirtualizedTable extends React.PureComponent {\r\n  static defaultProps = {\r\n    headerHeight: 48,\r\n    rowHeight: 100,\r\n  }\r\n\r\n  getRowClassName = ({ index }) => {\r\n    const { classes, onRowClick } = this.props\r\n\r\n    return clsx(classes.tableRow, classes.flexContainer, {\r\n      [classes.tableRowHover]: index !== -1 && onRowClick != null,\r\n    })\r\n  }\r\n\r\n  cellRenderer = ({ cellData, columnIndex }) => {\r\n    const { columns, classes, rowHeight, onRowClick } = this.props\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, {\r\n          [classes.noClick]: onRowClick == null,\r\n        })}\r\n        variant=\"body\"\r\n        style={{ height: rowHeight }}\r\n        align={\r\n          (columnIndex != null && columns[columnIndex].numeric) || false\r\n            ? 'right'\r\n            : 'left'\r\n        }\r\n      >\r\n        {cellData}\r\n      </TableCell>\r\n    )\r\n  }\r\n\r\n  headerRenderer = ({ label, columnIndex }) => {\r\n    const { headerHeight, columns, classes } = this.props\r\n\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(\r\n          classes.tableCell,\r\n          classes.flexContainer,\r\n          classes.noClick\r\n        )}\r\n        variant=\"head\"\r\n        style={{ height: headerHeight }}\r\n        align={columns[columnIndex].numeric || false ? 'right' : 'left'}\r\n      >\r\n        <span>{label}</span>\r\n      </TableCell>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      columns,\r\n      rowHeight,\r\n      headerHeight,\r\n      ...tableProps\r\n    } = this.props\r\n    return (\r\n      <AutoSizer>\r\n        {({ height, width }) => (\r\n          <Table\r\n            height={height || '200px'}\r\n            width={width < MIN_TABLE_WIDTH ? MIN_TABLE_WIDTH : width}\r\n            rowHeight={rowHeight}\r\n            gridStyle={{\r\n              direction: 'inherit',\r\n            }}\r\n            headerHeight={headerHeight}\r\n            className={classes.table}\r\n            {...tableProps}\r\n            rowClassName={this.getRowClassName}\r\n          >\r\n            {columns.map(({ dataKey, ...other }, index) => {\r\n              return (\r\n                <Column\r\n                  key={dataKey}\r\n                  headerRenderer={(headerProps) =>\r\n                    this.headerRenderer({\r\n                      ...headerProps,\r\n                      columnIndex: index,\r\n                    })\r\n                  }\r\n                  className={classes.flexContainer}\r\n                  cellRenderer={this.cellRenderer}\r\n                  dataKey={dataKey}\r\n                  {...other}\r\n                />\r\n              )\r\n            })}\r\n          </Table>\r\n        )}\r\n      </AutoSizer>\r\n    )\r\n  }\r\n}\r\n\r\nMuiVirtualizedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  columns: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      dataKey: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      numeric: PropTypes.bool,\r\n      width: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n  headerHeight: PropTypes.number,\r\n  onRowClick: PropTypes.func,\r\n  rowHeight: PropTypes.number,\r\n}\r\n\r\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable)\r\n\r\nexport default function TeamTable({ data }) {\r\n  let columns = []\r\n  Object.keys(data[0]).forEach((row) => {\r\n    let obj = {\r\n      width: 700,\r\n      label: row,\r\n      dataKey: row,\r\n    }\r\n    columns.push(obj)\r\n  })\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        height: 400,\r\n        width: '100%',\r\n        overflowX: 'scroll',\r\n        overflowY: 'hidden',\r\n      }}\r\n    >\r\n      <VirtualizedTable\r\n        rowCount={data.length}\r\n        rowGetter={({ index }) => data[index]}\r\n        columns={columns}\r\n      />\r\n    </Paper>\r\n  )\r\n}\r\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;"],"sourceRoot":""}